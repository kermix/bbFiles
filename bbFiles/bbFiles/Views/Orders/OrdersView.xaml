<UserControl x:Class="bbFiles.Views.OrdersView"
 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:IconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
             xmlns:Entities="clr-namespace:bbFiles.Entities"
             xmlns:Validation="clr-namespace:bbFiles.Entities.ValidationRules"
             xmlns:Helpers="clr-namespace:bbFiles.Helpers"
             xmlns:Converters="clr-namespace:bbFiles.Converters"
             xmlns:p="clr-namespace:bbFiles.Resources" 
             xmlns:local="clr-namespace:bbFiles.Views"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800" Loaded="UserControl_Loaded"
             DataContext="{Binding Order, Source={StaticResource Locator}}" Name="UI">
    <UserControl.Resources>
        <ObjectDataProvider 
            x:Key="BloodTypes" 
            ObjectType="{x:Type Helpers:BloodTypeHelper}" 
            MethodName="GetAllBloodTypes"/>
        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        <Converters:reverseBooleanToVisibilityConverter x:Key="reverseBooleanToVisibilityConverter" />
        <Converters:revertBooleanConverter x:Key="revertBooleanConverter" />
        <CollectionViewSource x:Key="orderViewSource" d:DesignSource="{d:DesignInstance {x:Type Entities:Order}, CreateList=True}"/>
        <Style x:Key="SaveButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroCircleButtonStyle}">
            <Setter Property="IsEnabled" Value="False"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding InEdit, Mode=OneWay}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="True"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="6*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Vertical" 
                    Grid.Column="1"
                    IsEnabled="{Binding OrderDetailsMode, Mode=OneWay, Converter={StaticResource revertBooleanConverter}}">
            <Button Style="{DynamicResource MetroCircleButtonStyle}"
                    Height="40"
                    Width="40"
                    ToolTip="{x:Static p:Strings.Add}"
                    Command="{Binding SendOrderCommand, Mode=OneWay}"
                    CommandParameter="{x:Null}">
                <IconPacks:PackIconFontAwesome Kind="Plus"/>
            </Button>
            <Button Style="{DynamicResource MetroCircleButtonStyle}"
                    Height="40"
                    Width="40"
                    ToolTip="{x:Static p:Strings.Details}"
                    Command="{Binding  SendOrderCommand, Mode=OneWay}"
                    CommandParameter="{Binding ElementName=orderDataGrid,Path=SelectedItem}">
                <IconPacks:PackIconFontAwesome Kind="Search"/>
            </Button>
            <Button Style="{DynamicResource MetroCircleButtonStyle}"
                    Height="40"
                    Width="40"
                    ToolTip="{x:Static p:Strings.MarkAsSend}"
                    Command="{Binding  MarkAsSendCommand, Mode=OneWay}"
                    CommandParameter="{Binding ElementName=orderDataGrid,Path=SelectedItem}">
                <IconPacks:PackIconFontAwesome Kind="PaperPlane"/>
            </Button>
            <Button Style="{DynamicResource MetroCircleButtonStyle}"
                    Height="40"
                    Width="40"
                    ToolTip="{x:Static p:Strings.Refresh}"
                    Command="{Binding RefreshCommand, Mode=OneWay}">
                <IconPacks:PackIconFontAwesome Kind="Refresh"/>
            </Button>
        </StackPanel>
        <Grid x:Name="existingOrderGrid"
              Visibility="{Binding OrderDetailsMode, Mode=OneWay, 
            Converter={StaticResource booleanToVisibilityConverter}}"
              Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="8*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Column="0" Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="4*"/>
                </Grid.RowDefinitions>
                <Label Content="{x:Static p:Strings.Amount}"  Grid.Row="0" Grid.Column="0"/>
                <Label Content="{x:Static p:Strings.BloodType}"  Grid.Row="1" Grid.Column="0"/>
                <Label Content="{x:Static p:Strings.RhMarker}"  Grid.Row="2" Grid.Column="0"/>
                <Label Content="{x:Static p:Strings.OrderDate}"  Grid.Row="3" Grid.Column="0"/>
                <Label Content="{x:Static p:Strings.Send}" Grid.Row="5" Grid.Column="0"/>
                <TextBox x:Name="amountTextBox"  
                         Grid.Row="0"
                         Grid.Column="1"
                         IsEnabled="{Binding InEdit, Mode=OneWay}">
                    <TextBox.Text>
                        <Binding Path="SelectedOrderAmount" 
                                 Mode="TwoWay" 
                                 NotifyOnValidationError="True" 
                                 ValidatesOnExceptions="True"
                                 ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <Validation:AmountValidationRule Min="100" Max="5000"/>
                                <Validation:RegexValidationRule  RegEx="^[0-9]+$"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <ComboBox x:Name="bloodTypeComboBox" 
                          Grid.Row="1"
                          Grid.Column="1"
                          ItemsSource="{Binding Source={StaticResource BloodTypes}}"
                          DisplayMemberPath="Value"
                          SelectedValuePath="Key"
                          SelectedValue="{Binding SelectedOrderBloodType, Mode=TwoWay}"
                          IsEnabled="{Binding InEdit, Mode=OneWay}">
                </ComboBox>
                <CheckBox x:Name="rhMarkerCheckBox" 
                          Grid.Row="2"
                          Grid.Column="1"
                          IsThreeState="False" 
                          IsChecked="{Binding SelectedOrderRhMarker, Mode=TwoWay}"
                          IsEnabled="{Binding InEdit, Mode=OneWay}"/>
                <DatePicker x:Name="donateDateDatePicker"
                            Grid.Row="3"
                            Grid.Column="1"
                            VerticalAlignment="Center" 
                            SelectedDate="{Binding SelectedOrderDate, Mode=OneWay}"
                            IsEnabled="False"/>
                <CheckBox x:Name="sendCheckBox" 
                          Grid.Row="5"
                          Grid.Column="1"
                          IsThreeState="False" 
                          IsChecked="{Binding SelectedOrderSend, Mode=OneWay}"
                          IsEnabled="False"/>
            </Grid>
            <Grid Grid.Column="1"
                  Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="3*"/>
                </Grid.RowDefinitions>
                <Label Content="{x:Static p:Strings.AcceptorId}" 
                       Grid.Column="0"
                       Grid.Row="0"/>
                <Label Content="{x:Static p:Strings.AcceptorName}"
                       Grid.Column="0" 
                       Grid.Row="1"/>
                <Label Content="{x:Static p:Strings.Street}"
                       Grid.Column="0" 
                       Grid.Row="2"/>
                <Label Content="{x:Static p:Strings.City}" 
                       Grid.Column="0" 
                       Grid.Row="3"/>
                <Label Content="{x:Static p:Strings.PostalCode}" 
                       Grid.Column="0" 
                       Grid.Row="4"/>
                <Label Content="{x:Static p:Strings.PhoneNumber}" 
                       Grid.Column="0" 
                       Grid.Row="5"/>
                <Label Content="{x:Static p:Strings.Email}" 
                       Grid.Column="0" 
                       Grid.Row="6"/>
                <TextBox x:Name="acceptorIdTextBox"  
                         Grid.Row="0"
                         Grid.Column="1"
                         IsEnabled="{Binding InEdit, Mode=OneWay}">
                    <TextBox.Text>
                        <Binding Path="SelectedOrderAcceptorId"
                                 Mode="TwoWay" 
                                 NotifyOnValidationError="True" 
                                 ValidatesOnExceptions="True">
                            <Binding.ValidationRules>
                                <Validation:RegexValidationRule RegEx="^[0-9]+$"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBox x:Name="nameTextBox"  
                         Grid.Row="1"
                         Grid.Column="1"
                         IsEnabled="False"
                         Text="{Binding SelectedOrder.Acceptor.Name,Mode=OneWay}"/>
                <TextBox x:Name="streetTextBox"  
                         Grid.Row="2"
                         Grid.Column="1"
                         IsEnabled="False"
                         Text="{Binding SelectedOrder.Acceptor.Address_Street,Mode=OneWay}"/>
                <TextBox x:Name="cityTextBox"  
                         Grid.Row="3"
                         Grid.Column="1"
                         IsEnabled="False"
                         Text="{Binding SelectedOrder.Acceptor.Address_City,Mode=OneWay}"/>
                <TextBox x:Name="postalCodeTextBox"  
                         Grid.Row="4"
                         Grid.Column="1"
                         IsEnabled="False"
                         Text="{Binding SelectedOrder.Acceptor.Address_PostalCode,Mode=OneWay}"/>
                <TextBox x:Name="phoneTextBox"  
                         Grid.Row="5"
                         Grid.Column="1"
                         IsEnabled="False"
                         Text="{Binding SelectedOrder.Acceptor.Contact_Phone,Mode=OneWay}"/>
                <TextBox x:Name="emailTextBox"  
                         Grid.Row="6"
                         Grid.Column="1"
                         IsEnabled="False"
                         Text="{Binding SelectedOrder.Acceptor.Contact_Email,Mode=OneWay}"/>
            </Grid>
            <Grid Grid.Row="1" Grid.Column="1" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" 
                        Style="{StaticResource SaveButton}"
                        Height="40"
                        Width="40"
                        VerticalAlignment="Bottom"
                        ToolTip="{x:Static p:Strings.Save}"
                        Command="{Binding SaveOrderCommand, Mode=OneWay}">
                    <IconPacks:PackIconFontAwesome Kind="FloppyOutline"/>
                </Button>
                <Button Grid.Column="1" 
                        Style="{StaticResource MetroCircleButtonStyle}"
                        Height="40"
                        Width="40"
                        VerticalAlignment="Bottom"
                        ToolTip="{x:Static p:Strings.Close}"
                        Command="{Binding CancelCommand, Mode=OneWay}">
                    <IconPacks:PackIconFontAwesome Kind="Times"/>
                </Button>
            </Grid>
        </Grid>
        <Grid Visibility="{Binding Path=OrderDetailsMode, Mode=OneWay, 
            Converter={StaticResource reverseBooleanToVisibilityConverter}}"
              Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="8*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <DataGrid x:Name="orderDataGrid"
                      Grid.Row="0"
                  DataContext="{StaticResource orderViewSource}"
                  ItemsSource="{Binding}"
                  AutoGenerateColumns="False" 
                  EnableRowVirtualization="True" 
                  RowDetailsVisibilityMode="VisibleWhenSelected"
                  IsReadOnly="True"
                  SelectionUnit="FullRow"
                  SelectionMode="Single"
                  SelectedItem="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}},
                          Path=DataContext.SelectedDonate}">
                <DataGrid.Columns>
                    <DataGridTextColumn x:Name="idColumn" 
                                    Binding="{Binding Id, Mode=OneWay}" 
                                    Header="{x:Static p:Strings.ID}" 
                                    Width="*"/>
                    <DataGridTextColumn x:Name="amountColumn" 
                                    Binding="{Binding Amount, Mode=OneWay}" 
                                    Header="{x:Static p:Strings.Amount}" 
                                    Width="*"/>
                    <DataGridTextColumn x:Name="bloodTypeColumn" 
                                    Binding="{Binding Blood_Type, Mode=OneWay}" 
                                    Header="{x:Static p:Strings.BloodType}" 
                                    Width="*"/>
                    <DataGridCheckBoxColumn x:Name="rhMarkerColumn"
                                        Binding="{Binding Blood_RhMarker, Mode=OneWay}"
                                        Header="{x:Static p:Strings.RhMarker}"
                                        Width="SizeToHeader"/>
                    <DataGridTemplateColumn x:Name="orderDateDateColumn"
                                        Header="{x:Static p:Strings.OrderDate}" 
                                        Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding OrderDate, Mode=OneWay}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn x:Name="acceptorNameColumn" 
                                    Binding="{Binding Acceptor.Name, Mode=OneWay}" 
                                    Header="{x:Static p:Strings.AcceptorName}" 
                                    Width="*"/>
                </DataGrid.Columns>
            </DataGrid>
            <Label Content="{x:Static p:Strings.SearchByAcceptor}" HorizontalAlignment="Right" Grid.Row="1" Height="32" VerticalAlignment="Bottom" Margin="200 0"/>
            <TextBox x:Name="SearchTextbox" Text="" HorizontalAlignment="Right" Grid.Row="1" Width="200" Height="32" VerticalAlignment="Bottom" 
                     TextChanged="SearchTextbox_TextChanged"/>
        </Grid>
    </Grid>
</UserControl>
